package VIEW;

import DAO.QuartosDAO;
import DTO.QuartoDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
/**
 *
 * @author Salatiel
 */
public class FrmListaQuartos extends javax.swing.JInternalFrame {

    private String id_quarto;
    private FrmNovaReserva frmNovaReserva;

    /**
     * Creates new form FrmListaQuartos
     */
    public FrmListaQuartos(FrmNovaReserva frmNovaReserva) {
        initComponents();
        listarQuartos();
        this.frmNovaReserva = frmNovaReserva;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaQuartos = new javax.swing.JTable();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);

        tabelaQuartos.setBackground(new java.awt.Color(255, 255, 255));
        tabelaQuartos.setForeground(new java.awt.Color(0, 0, 0));
        tabelaQuartos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Numero", "Tipo", "Diaria", "Status"
            }
        ));
        jScrollPane1.setViewportView(tabelaQuartos);

        btnConfirmar.setText("Selecionar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirmar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        int index = tabelaQuartos.getSelectedRow();
        if (index != -1) {
            String id_quarto = tabelaQuartos.getModel().getValueAt(index, 0).toString();
            frmNovaReserva.preencherQuarto(id_quarto);
            setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum quarto selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnConfirmarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaQuartos;
    // End of variables declaration//GEN-END:variables
    private void listarQuartos() {
        try {
            //Cria um objeto objCadClienteDAO da classe CadClientesDAO
            QuartosDAO objQuartosDAO = new QuartosDAO();

            //Obtém o modelo da tabela tabelaCliente e limpa todas as linhas existentes
            DefaultTableModel model = (DefaultTableModel) tabelaQuartos.getModel();
            model.setNumRows(0);

            //Chama o método PesquisarCliente() do objeto objCadClienteDAO para obter uma lista de clientes
            ArrayList<QuartoDTO> lista = objQuartosDAO.PesquisarQuarto();

            //Para cada cliente na lista, adiciona uma nova linha à tabela com os detalhes do cliente.
            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId_quarto(),
                    lista.get(num).getNumero(),
                    lista.get(num).getTipo(),
                    lista.get(num).getPreco_diaria(),
                    lista.get(num).getStatus()
                });

            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Listarcliente" + erro);
        }

    }

    public String getId_quarto() {
        return id_quarto;
    }

    public JTable getTabelaCliente() {
        return tabelaQuartos;
    }
}
