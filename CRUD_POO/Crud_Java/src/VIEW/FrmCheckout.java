package VIEW;

import DAO.ReservaDAO;
import DTO.ReservaDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
/**
 *
 * @author Salatiel
 */
public class FrmCheckout extends javax.swing.JInternalFrame {

    private FrmConfirmaCheckout frmConfirmaCheckout;

    /**
     * Creates new form FrmCheckout
     */
    public FrmCheckout() {
        initComponents();
        listarReservas();
        this.frmConfirmaCheckout = new FrmConfirmaCheckout(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        btnConfirmaCheckin = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaReservas = new javax.swing.JTable();

        setClosable(true);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnConfirmaCheckin.setText("Confirmar Check-out");
        btnConfirmaCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaCheckinActionPerformed(evt);
            }
        });

        tabelaReservas.setBackground(new java.awt.Color(255, 255, 255));
        tabelaReservas.setForeground(new java.awt.Color(0, 0, 0));
        tabelaReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Reserva", "ID Cliente", "Nome", "ID Quarto", "Data Check-in", "Data Checkout", "Status"
            }
        ));
        jScrollPane1.setViewportView(tabelaReservas);

        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                        .addComponent(btnConfirmaCheckin)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnConfirmaCheckin))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnConfirmaCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaCheckinActionPerformed
        int index = tabelaReservas.getSelectedRow();
        if (index != -1) {
            String idReserva = tabelaReservas.getModel().getValueAt(index, 0).toString();
            String idCliente = tabelaReservas.getModel().getValueAt(index, 1).toString();
            String nome = tabelaReservas.getModel().getValueAt(index, 2).toString();
            String idQuarto = tabelaReservas.getModel().getValueAt(index, 3).toString();
            frmConfirmaCheckout.preencherReserva(idReserva, idCliente, nome, idQuarto);
            listarReservas();
            jDesktopPane1.add(frmConfirmaCheckout);
            frmConfirmaCheckout.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada", "Aviso", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnConfirmaCheckinActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmaCheckin;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaReservas;
    // End of variables declaration//GEN-END:variables
    private void listarReservas() {
        try {
            //Cria um objeto objCadClienteDAO da classe CadClientesDAO
            ReservaDAO objCadReserva = new ReservaDAO();

            //Obtém o modelo da tabela tabelaCliente e limpa todas as linhas existentes
            DefaultTableModel model = (DefaultTableModel) tabelaReservas.getModel();
            model.setNumRows(0);

            //Chama o método PesquisarCliente() do objeto objCadClienteDAO para obter uma lista de clientes
            // Para selecionar reservas com status 'Reservado'
            String whereClause = "status = ?";
            String[] whereArgs = new String[]{"Ativo"};
            ArrayList<ReservaDTO> lista = objCadReserva.PesquisarReserva(whereClause, whereArgs);

            //Para cada cliente na lista, adiciona uma nova linha à tabela com os detalhes do cliente.
            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId(),
                    lista.get(num).getId_cliente(),
                    lista.get(num).getNome(),
                    lista.get(num).getIdQuarto(),
                    lista.get(num).getDataCheckin(),
                    lista.get(num).getDataCheckout(),
                    lista.get(num).getStatus()
                });

            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Listarcliente" + erro);
        }
    }

    public void onCheckinDataConfirmed() {
        // Atualize os dados da tabela
        listarReservas();
    }
}
