package VIEW;

import DAO.ReservaDAO;
import DTO.ReservaDTO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
/**
 *
 * @author henri
 */
public class FrmConsultaCheckin extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmConsultaCheckin
     */
    public FrmConsultaCheckin() {
        initComponents();
        listarReservas();
        BtnEditarReserva.setEnabled(false);
        BtnExcluirrreserva.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIDCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        BtnCarregarCampos = new javax.swing.JButton();
        BtnEditarReserva = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCheckin = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        BtnExcluirrreserva = new javax.swing.JButton();
        txtIDQuarto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtIDreserva = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        txtDataCheckin = new javax.swing.JFormattedTextField();

        setClosable(true);
        setMaximizable(true);
        setTitle("Consulta Check-in");

        txtIDCliente.setEditable(false);
        txtIDCliente.setBackground(new java.awt.Color(255, 255, 255));
        txtIDCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtIDCliente.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nome cliente");

        BtnCarregarCampos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnCarregarCampos.setText("Carregar Campos");
        BtnCarregarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCarregarCamposActionPerformed(evt);
            }
        });

        BtnEditarReserva.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnEditarReserva.setText("Editar reserva");
        BtnEditarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditarReservaActionPerformed(evt);
            }
        });

        jDesktopPane1.setEnabled(false);
        jDesktopPane1.setFocusable(false);

        tabelaCheckin.setBackground(new java.awt.Color(255, 255, 255));
        tabelaCheckin.setForeground(new java.awt.Color(0, 0, 0));
        tabelaCheckin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Reserva", "ID Cliente", "Nome", "ID Quarto", "Data Check-in", "Status"
            }
        ));
        jScrollPane1.setViewportView(tabelaCheckin);

        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nº Quarto");

        BtnExcluirrreserva.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnExcluirrreserva.setText("Excluir reserva");
        BtnExcluirrreserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExcluirrreservaActionPerformed(evt);
            }
        });

        txtIDQuarto.setBackground(new java.awt.Color(255, 255, 255));
        txtIDQuarto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIDQuarto.setForeground(new java.awt.Color(51, 51, 51));
        txtIDQuarto.setFocusable(false);
        txtIDQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDQuartoActionPerformed(evt);
            }
        });

        jLabel4.setText("Data Checkin");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nº reserva");

        txtIDreserva.setEditable(false);
        txtIDreserva.setBackground(new java.awt.Color(255, 255, 255));
        txtIDreserva.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIDreserva.setForeground(new java.awt.Color(51, 51, 51));
        txtIDreserva.setFocusable(false);

        jLabel6.setText("ID");

        txtNomeCliente.setEditable(false);
        txtNomeCliente.setBackground(new java.awt.Color(255, 255, 255));
        txtNomeCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNomeCliente.setForeground(new java.awt.Color(51, 51, 51));
        txtNomeCliente.setFocusable(false);

        txtDataCheckin.setBackground(new java.awt.Color(255, 255, 255));
        txtDataCheckin.setForeground(new java.awt.Color(0, 0, 0));
        try {
            txtDataCheckin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnExcluirrreserva, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnEditarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnCarregarCampos)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jDesktopPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDreserva, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtIDCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtDataCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtIDreserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtIDQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtIDCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDataCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnCarregarCampos)
                    .addComponent(BtnEditarReserva)
                    .addComponent(BtnExcluirrreserva))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCarregarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCarregarCamposActionPerformed
        CarregarCampos();
    }//GEN-LAST:event_BtnCarregarCamposActionPerformed

    private void BtnEditarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditarReservaActionPerformed
        AlterarCheckin();
        JOptionPane.showMessageDialog(null, "Data de check-in Modificada");
        LimparCampos();
        listarReservas();
    }//GEN-LAST:event_BtnEditarReservaActionPerformed

    private void BtnExcluirrreservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExcluirrreservaActionPerformed
        ExcluirCheckin();
        JOptionPane.showMessageDialog(null, "Check-in excluido");
        LimparCampos();
        listarReservas();
    }//GEN-LAST:event_BtnExcluirrreservaActionPerformed

    private void txtIDQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDQuartoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDQuartoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCarregarCampos;
    private javax.swing.JButton BtnEditarReserva;
    private javax.swing.JButton BtnExcluirrreserva;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaCheckin;
    private javax.swing.JFormattedTextField txtDataCheckin;
    private javax.swing.JTextField txtIDCliente;
    private javax.swing.JTextField txtIDQuarto;
    private javax.swing.JTextField txtIDreserva;
    private javax.swing.JTextField txtNomeCliente;
    // End of variables declaration//GEN-END:variables
    private void listarReservas() {
        try {
            //Cria um objeto objCadClienteDAO da classe CadClientesDAO
            ReservaDAO objCadReserva = new ReservaDAO();

            //Obtém o modelo da tabela tabelaCliente e limpa todas as linhas existentes
            DefaultTableModel model = (DefaultTableModel) tabelaCheckin.getModel();
            model.setNumRows(0);

            //Chama o método PesquisarCliente() do objeto objCadClienteDAO para obter uma lista de clientes
            // Para selecionar reservas com status 'Reservado'
            String whereClause = "status = ?";
            String[] whereArgs = new String[]{"Ativo"};
            ArrayList<ReservaDTO> lista = objCadReserva.PesquisarReserva(whereClause, whereArgs);

            //Para cada cliente na lista, adiciona uma nova linha à tabela com os detalhes do cliente.
            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId(),
                    lista.get(num).getId_cliente(),
                    lista.get(num).getNome(),
                    lista.get(num).getIdQuarto(),
                    lista.get(num).getDataCheckin(),
                    lista.get(num).getStatus()
                });

            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "ListarReservas" + erro);
        }
    }

    public void onCheckinDataConfirmed() {
        // Atualize os dados da tabela
        listarReservas();
    }

    private void CarregarCampos() {

        //Obtém o índice da linha selecionada na tabela tabelaCliente
        int setar = tabelaCheckin.getSelectedRow();
        if (setar == -1) {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            //Para cada campo de texto, define o texto para o valor correspondente na linha selecionada da tabela.
            txtIDreserva.setText(tabelaCheckin.getModel().getValueAt(setar, 0).toString());
            txtIDCliente.setText(tabelaCheckin.getModel().getValueAt(setar, 1).toString());
            txtNomeCliente.setText(tabelaCheckin.getModel().getValueAt(setar, 2).toString());
            txtIDQuarto.setText(tabelaCheckin.getModel().getValueAt(setar, 3).toString());
            txtDataCheckin.setText(tabelaCheckin.getModel().getValueAt(setar, 4).toString());
            
            BtnEditarReserva.setEnabled(true);
            BtnExcluirrreserva.setEnabled(true);
        }

    }

    private void AlterarCheckin() {
        String id_reserva, data_checkin;

        id_reserva = txtIDreserva.getText();
        data_checkin = txtDataCheckin.getText();

        String formataDataCheckin = ConverterData(data_checkin);

        if (formataDataCheckin == null) {
            JOptionPane.showMessageDialog(null, "Formato de data inválido. Por favor, use o formato dd/MM/yyyy.");
            return;
        }
        ReservaDTO objCadReservaDTO = new ReservaDTO();

        objCadReservaDTO.setId(id_reserva);
        objCadReservaDTO.setDataCheckin(formataDataCheckin);
        objCadReservaDTO.setStatus("Ativo");

        ReservaDAO objCadReservaDAO = new ReservaDAO();

        objCadReservaDAO.AlterarDataCheckin(objCadReservaDTO);

    }

    private String ConverterData(String dateStr) {
        try {
            SimpleDateFormat inputFormat = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = inputFormat.parse(dateStr);
            return outputFormat.format(date);
        } catch (ParseException e) {
            return null;
        }
    }

    private void LimparCampos() {
        txtIDreserva.setText("");
        txtIDQuarto.setText("");
        txtIDCliente.setText("");
        txtNomeCliente.setText("");
        txtDataCheckin.setText("");
    }

    private void ExcluirCheckin() {
        String id_reserva;

        id_reserva = txtIDreserva.getText();
        ReservaDTO objCadReservaDTO = new ReservaDTO();
        objCadReservaDTO.setId(id_reserva);

        ReservaDAO objCadReservaDAO = new ReservaDAO();
        objCadReservaDAO.ExcluirReserva(objCadReservaDTO);

    }
}
